name: CI

on:
  push:
    branches:
    - main
  pull_request:

jobs:
  pod-lint:
    name: Pod Lint
    runs-on: macOS-11
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Bundle Install
        run: bundle install
      - name: Select Xcode Version
        run: xcversion select 11.7
      - name: Lint Podspec
        run: bundle exec pod lib lint --verbose --fail-fast --swift-version=5.1
  carthage:
    name: Carthage
    runs-on: macOS-11
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Bundle Install
        run: bundle install
      - name: Select Xcode Version
        run: xcversion select 11.7
      - name: Install Carthage
        run: brew outdated carthage || brew upgrade carthage
      - name: Build Framework
        run: swift package generate-xcodeproj --output generated/ && carthage build --project-directory generated/ --verbose --no-skip-current
  spm-11:
    name: Build Xcode 11
    runs-on: macOS-11
    strategy:
      matrix:
        platforms: [
          'iOS_13,tvOS_13,watchOS_6',
          'macOS_10_15',
        ]
      fail-fast: false
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Bundle Install
        run: bundle install
      - name: Select Xcode Version
        run: xcversion select 11.7
      - name: Prepare Simulator Runtimes
        run: Scripts/github/prepare-simulators.sh ${{ matrix.platforms }}
      - name: Build and Test Framework
        run: Scripts/build.swift ${{ matrix.platforms }}
      - name: Upload Coverage Reports
        if: success()
        run: Scripts/upload-coverage-reports.sh ${{ matrix.platforms }}
  spm-12:
    name: Build Xcode 12
    runs-on: macOS-11
    strategy:
      matrix:
        platforms: [
          'iOS_14,tvOS_14,watchOS_7',
          'macOS_11',
        ]
      fail-fast: false
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Bundle Install
        run: bundle install
      - name: Select Xcode Version
        run: xcversion select 12.4
      - name: Prepare Simulator Runtimes
        run: Scripts/github/prepare-simulators.sh ${{ matrix.platforms }}
      - name: Build and Test Framework
        run: Scripts/build.swift ${{ matrix.platforms }}
      - name: Upload Coverage Reports
        if: success()
        run: Scripts/upload-coverage-reports.sh ${{ matrix.platforms }}
  spm-13:
    name: Build Xcode 13
    runs-on: macOS-12
    strategy:
      matrix:
        platforms: [
          'iOS_15,tvOS_15,watchOS_8',
          'macOS_12',
        ]
      fail-fast: false
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Bundle Install
        run: bundle install
      - name: Select Xcode Version
        run: xcversion select 13.4.1
      - name: Prepare Simulator Runtimes
        run: Scripts/github/prepare-simulators.sh ${{ matrix.platforms }}
      - name: Build and Test Framework
        run: Scripts/build.swift ${{ matrix.platforms }}
      - name: Upload Coverage Reports
        if: success()
        run: Scripts/upload-coverage-reports.sh ${{ matrix.platforms }}
  spm-13-swift:
    name: Swift Build Xcode 13
    runs-on: macOS-12
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Bundle Install
        run: bundle install
      - name: Select Xcode Version
        run: xcversion select 13.4.1
      - name: Build and Test Framework
        run: xcrun swift test -c release -Xswiftc -enable-testing
