name: CI

on:
  push:
    branches:
    - main
  pull_request:

jobs:
  pod-lint:
    name: Pod Lint
    runs-on: macOS-11
    steps:
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1.3'
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Bundle Install
        run: bundle install
      - name: Select Xcode Version
        run: sudo xcode-select --switch /Applications/Xcode_11.7.app/Contents/Developer
      - name: Lint Podspec
        run: bundle exec pod lib lint --verbose --fail-fast --swift-version=5.1
  carthage:
    name: Carthage
    runs-on: macOS-11
    steps:
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1.3'
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Bundle Install
        run: bundle install
      - name: Select Xcode Version
        run: sudo xcode-select --switch /Applications/Xcode_11.7.app/Contents/Developer
      - name: Install Carthage
        run: brew outdated carthage || brew upgrade carthage
      - name: Build Framework
        run: swift package generate-xcodeproj --output generated/ && carthage build --project-directory generated/ --verbose --no-skip-current
  spm-11:
    name: Build Xcode 11
    runs-on: macOS-11
    strategy:
      matrix:
        platforms: [
          'iOS_13,watchOS_6',
          'macOS_10_15,tvOS_13',
        ]
      fail-fast: false
    steps:
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1.3'
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Bundle Install
        run: bundle install
      - name: Select Xcode Version
        run: sudo xcode-select --switch /Applications/Xcode_11.7.app/Contents/Developer
      - name: Prepare Simulator Runtimes
        run: Scripts/github/prepare-simulators.sh ${{ matrix.platforms }}
      - name: Build and Test Framework
        run: Scripts/build.swift ${{ matrix.platforms }}
  spm-12:
    name: Build Xcode 12
    runs-on: macOS-11
    strategy:
      matrix:
        platforms: [
          'iOS_14,watchOS_7',
          'macOS_11,tvOS_14',
        ]
      fail-fast: false
    steps:
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1.3'
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Bundle Install
        run: bundle install
      - name: Select Xcode Version
        run: sudo xcode-select --switch /Applications/Xcode_12.4.app/Contents/Developer
      - name: Prepare Simulator Runtimes
        run: Scripts/github/prepare-simulators.sh ${{ matrix.platforms }}
      - name: Build and Test Framework
        run: Scripts/build.swift ${{ matrix.platforms }}
  spm-13:
    name: Build Xcode 13
    runs-on: macOS-12
    strategy:
      matrix:
        platforms: [
          'iOS_15,watchOS_8',
          'macOS_12,tvOS_15',
        ]
      fail-fast: false
    steps:
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1.3'
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Bundle Install
        run: bundle install
      - name: Select Xcode Version
        run: sudo xcode-select --switch /Applications/Xcode_13.4.1.app/Contents/Developer
      - name: Prepare Simulator Runtimes
        run: Scripts/github/prepare-simulators.sh ${{ matrix.platforms }}
      - name: Build and Test Framework
        run: Scripts/build.swift ${{ matrix.platforms }}
      - name: Prepare Coverage Reports
        run: ./Scripts/prepare-coverage-reports.sh
      - name: Upload Coverage Reports
        if: success()
        uses: codecov/codecov-action@v3
  spm-13-swift:
    name: Swift Build Xcode 13
    runs-on: macOS-12
    steps:
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1.3'
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Bundle Install
        run: bundle install
      - name: Select Xcode Version
        run: sudo xcode-select --switch /Applications/Xcode_13.4.1.app/Contents/Developer
      - name: Build and Test Framework
        run: xcrun swift test -c release -Xswiftc -enable-testing
  spm-14:
    name: Build Xcode 14
    runs-on: macOS-12
    strategy:
      matrix:
        platforms: [
          'iOS_16,watchOS_9',
          'macOS_12,tvOS_16',
        ]
      fail-fast: false
    steps:
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1.3'
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Bundle Install
        run: bundle install
      - name: Select Xcode Version
        run: sudo xcode-select --switch /Applications/Xcode_14.0.1.app/Contents/Developer
      - name: Prepare Simulator Runtimes
        run: Scripts/github/prepare-simulators.sh ${{ matrix.platforms }}
      - name: Build and Test Framework
        run: Scripts/build.swift ${{ matrix.platforms }}
      - name: Prepare Coverage Reports
        run: ./Scripts/prepare-coverage-reports.sh
      - name: Upload Coverage Reports
        if: success()
        uses: codecov/codecov-action@v3
  spm-14-swift:
    name: Swift Build Xcode 14
    runs-on: macOS-12
    steps:
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1.3'
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Bundle Install
        run: bundle install
      - name: Select Xcode Version
        run: sudo xcode-select --switch /Applications/Xcode_14.0.1.app/Contents/Developer
      - name: Build and Test Framework
        run: xcrun swift test -c release -Xswiftc -enable-testing
